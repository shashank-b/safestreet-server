diff --git a/complaint/views.py b/complaint/views.py
index dfc89fd..892f2a2 100644
--- a/complaint/views.py
+++ b/complaint/views.py
@@ -72,4 +72,4 @@ class ComplaintDetail(APIView):
     def delete(self, request, pk, format=None):
         complaint = self.get_object(pk)
         complaint.delete()
-        return Response(status=status.HTTP_204_NO_CONTENT)
\ No newline at end of file
+        return Response(status=status.HTTP_204_NO_CONTENT)
diff --git a/serverPothole/settings.py b/serverPothole/settings.py
index f90f4bd..4e8806c 100644
--- a/serverPothole/settings.py
+++ b/serverPothole/settings.py
@@ -45,6 +45,7 @@ INSTALLED_APPS = [
     'review',
     'web',
     'core',
+    'auto_pothole',
     'rest_framework',
 ]
 
diff --git a/serverPothole/urls.py b/serverPothole/urls.py
index eb27062..fe206ea 100644
--- a/serverPothole/urls.py
+++ b/serverPothole/urls.py
@@ -24,5 +24,6 @@ urlpatterns = [
     url(r'^admin/', include(admin.site.urls), name='admin'),
     url(r'^api-auth/', include('rest_framework.urls', namespace='rest_framework'),
         name='api-auth'),
-    url(r'^web/', include('web.urls', namespace='web'))
+    url(r'^web/', include('web.urls', namespace='web')),
+    url(r'^auto_pothole/', include('auto_pothole.urls', namespace='auto_pothole'))
 ] + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)
diff --git a/static/web/js/map.js b/static/web/js/map.js
index e25a980..8e90b7d 100644
--- a/static/web/js/map.js
+++ b/static/web/js/map.js
@@ -1,51 +1,141 @@
-var mumbaiLatLng = {
-  lat: 19.130340,
-  lng: 72.907428
-};
-
-function initMap() {
-  var map = new google.maps.Map(document.getElementById('map'), {
-    zoom: 12,
-    center: mumbaiLatLng
-  });
-  var markers = [];
-  var colorMap = {
-    'a': 'white',
-    'r': 'red',
-    'd': 'green',
-    'f': 'black'
-  };
-  var iconMap = {
-    'p': google.maps.SymbolPath.CIRCLE,
-    's': google.maps.SymbolPath.FORWARD_OPEN_ARROW
-  };
-  $.ajax({
-    type: 'GET',
-    url: '/api/complaint',
-    async: false,
-    success: function(response) {
-      for (i = 0; i < response.length; i++) {
-        markers.push([response[i].Lat, response[i].Long,
-            colorMap[response[i].Status],
-            iconMap[response[i].Type]
-        ]);
-      }
+var map;
+var infoWindow;
+var markersData = [];
+
+function initialize() {
+
+    var mapOptions = {   
+        center: new google.maps.LatLng(22.564889, 78.240017),
+        zoom: 4,
+        mapTypeId: 'roadmap'
+    };
+
+    map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
+
+    // a new Info Window is created
+    infoWindow = new google.maps.InfoWindow();
+
+    // Event that closes the Info Window with a click on the map
+    google.maps.event.addListener(map, 'click', function() {
+        infoWindow.close();
+    });    
+    
+     //manually reported potholes
+    
+     var xhReq = new XMLHttpRequest();
+     xhReq.open("GET", "/api/complaint", false);
+     xhReq.send(null);
+     var serverResponse = xhReq.responseText;
+     var myObject = eval('(' + serverResponse + ')');
+     for (i in myObject)
+     {              
+       var data = {lat:myObject[i]["Lat"], lng: myObject[i]["Long"] , name: myObject[i]["id"], type: "Manual" , time: myObject[i]["Info"], City:"Severity: "+ myObject[i]["Severity"], color:"green"}
+       markersData.push(data)
+     }
+     
+    //automatically detected potholes
+
+     var xhReq = new XMLHttpRequest();
+     xhReq.open("GET", "/auto_pothole/get_potholes", false);
+     xhReq.send(null);
+     var serverResponse = xhReq.responseText;
+     var myObject = eval('(' + serverResponse + ')');
+
+     for (i in myObject)
+     { 
+ 
+        if(myObject[i]["latitude"] != 0 && myObject[i]["classifier_output"] == 1)
+        {         
+           var rep = myObject[i]["reporter"]                    
+           var color = "red"			
+           var model = ""  
+	   var date1 = new Date()                   
+           var date = new Date(myObject[i]["detection_time"])
+	   
+	   if(date.getDate() == date1.getDate() && date.getMonth() == date1.getMonth() && date.getYear() == date1.getYear() && rep != 4)
+	   {		
+		color = "blue"
+	   }
+	   if(rep == 4)	
+	   {
+	 color = "green"
+	   }
+           var data = {lat:myObject[i]["latitude"], lng: myObject[i]["longitude"] , name: myObject[i]["id"], type: "Automated" , time:"Detection Time: " + date.toString().substring(0,24), City:model +"Samples per sec: " +myObject[i]["win_size"].toString() + "  Reporter: "+ rep, color: color}
+	   markersData.push(data)
+           
+        }
+     }	
+ 
+    // Finally displayMarkers() function is called to begin the markers creation
+    displayMarkers();
+   
+}
+
+
+google.maps.event.addDomListener(window, 'load', initialize);
+
+
+
+// This function will iterate over markersData array
+// creating markers with createMarker function
+function displayMarkers(){
+
+    // this variable sets the map bounds according to markers position
+    var bounds = new google.maps.LatLngBounds();
+
+    // for loop traverses markersData array calling createMarker function for each marker 
+    for (var i = 0; i < markersData.length; i++){
+
+        var latlng = new google.maps.LatLng(markersData[i].lat, markersData[i].lng);
+        var name = markersData[i].name;
+        var type = markersData[i].type;
+        var time = markersData[i].time;
+        var City = markersData[i].City;
+        var color = markersData[i].color;
+
+        createMarker(latlng, name, type, time, City, color);
+
+        // marker position is added to bounds variable
+        bounds.extend(latlng);  
     }
-  });
-
-  for (i = 0; i < markers.length; i++) {
-    var position = new google.maps.LatLng(markers[i][0], markers[i][1]);
-    marker = new google.maps.Marker({
-      position: position,
-      map: map,
-      icon: {
-        path: markers[i][3],
-        fillColor: markers[i][2],
-        fillOpacity: .6,
-        scale: 4.5,
-        strokeColor: 'white',
-        strokeWeight: 1
-      }
+
+    // Finally the bounds variable is used to set the map bounds
+    // with fitBounds() function
+    map.fitBounds(bounds);
+}
+
+// This function creates each marker and it sets their Info Window content
+function createMarker(latlng, name, type, time, City, color){
+    var marker = new google.maps.Marker({
+        icon: {
+        path: google.maps.SymbolPath.CIRCLE,
+        strokeColor: color,
+        scale: 3
+        },
+        map: map,
+        position: latlng,
+        title: name
+    });
+
+    // This event expects a click on a marker
+    // When this event is fired the Info Window content is created
+    // and the Info Window is opened.
+    google.maps.event.addListener(marker, 'click', function() {
+
+	if(type == "Automated")
+	{
+		// Creating the content to be inserted in the infowindow
+		var iwContent = '<div id="iw_container">' +
+		'<div class="iw_title">' + name + '</div>' +
+		'<div class="iw_content">' + type + '<br />' +
+		time + '<br />' +
+		City + '</div></div>';
+	}	
+
+    // including content to the Info Window.
+    infoWindow.setContent(iwContent);
+
+    // opening the Info Window in the current map and at the current marker location.
+    infoWindow.open(map, marker);
     });
-  }
 }
diff --git a/templates/web/complaints.html b/templates/web/complaints.html
index 8a23836..3e9c119 100644
--- a/templates/web/complaints.html
+++ b/templates/web/complaints.html
@@ -1,28 +1,40 @@
-<!DOCTYPE html>
 {% load staticfiles %}
 <html>
-<head>
-    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
-    <meta charset="utf-8">
-    <title>Simple markers</title>
-    <style>
-      html, body {
+  <head>
+
+  <style type="text/css">
+
+    {
+        height: 100%;
+    }
+    body 
+    {
         height: 100%;
         margin: 0;
         padding: 0;
-      }
-      #map {
+    }
+#map-canvas {
         height: 100%;
-      }
-    </style>
+}
+#iw_container .iw_title {
+        font-size: 16px;
+            font-weight: bold;
+}
+
+.iw_content {
+        padding: 15px 15px 15px 0;
+}
+
+  </style>
+
+        <meta charset="utf-8">
+        <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?sensor=false"></script>
+        <script type="text/javascript" src="{% static 'web/js/map.js' %}"></script>
+    
 </head>
-<body>
-<div id="map"></div>
-<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js"></script>
-<script async defer
-        src="https://maps.googleapis.com/maps/api/js?
-        key=AIzaSyAxSwJX6SzplrDxGNecmVJPnFsipWpE8XA&callback=initMap">
-</script>
-<script src="{% static 'web/js/map.js' %}"></script>
-</body>
+        <body>
+                 
+          <div id="map-canvas"/>
+        </body>
 </html>
+
